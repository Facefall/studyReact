{"ast":null,"code":"var _jsxFileName = \"/Users/sky/project/studyReact/10-react-router-dom/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route // Router,\n// Link,\n// HashRouter as Router,\n//hashRouter 不会更新页面\n, NavLink, BrowserRouter as Router // StaticRouter,\n, Switch // HashRouter\n} from 'react-router-dom';\nimport './static/css/index.css';\nimport \"./component/index.css\"; // import Home from \"./component/home.jsx\";\n// import User from \"./component/user\";\n// import News from \"./component/news\";\n// import Not404 from \"./component/not404\";\n// import Newsdetails from \"./component/newsdetails\";\n\nimport routers from \"./router/index.js\"; // import Home from \"./component/home\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getData = () => {\n      const arr = [{\n        to: '/',\n        exact: true,\n        con: \"Home\"\n      }, {\n        to: '/news',\n        con: \"News\"\n      }, {\n        to: '/user',\n        con: \"User\"\n      }];\n      return arr;\n    };\n  }\n\n  render() {\n    const data = this.getData();\n    return (\n      /*\n      <BrowserRouter>\n         <div>\n                 路由到user 或者news\n                 会出现home组件(根组件)与自身组件\n                  原因:匹配不精准\n                  解决办法:\n                 组件添加属性exact 精准匹配根组件\n                  不精准匹配\n                 匹配不止一条路由\n                 从上至下\n                  如果想只匹配一个组件\n                 用switch,不用BrowserRouter\n               <Route exact path='/' component={Home} />\n             <Route path='/User' component={User} />\n             <Route path='/News' component={News} />\n             <Home />\n             <User />\n             <News />\n         </div>\n      </BrowserRouter>\n      * */\n      React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'topNav',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, data.map((item, index) => {\n        // return (<NavLink key={index} to={item.to}>{item.con}</NavLink>)\n        return React.createElement(NavLink, Object.assign({\n          key: index\n        }, item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), item.con);\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \") }\", routers.map((item, index) => {\n        if (item.exact) {\n          return React.createElement(Route, {\n            key: index,\n            path: item.path,\n            component: item.component,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Route, {\n          key: index,\n          path: item.path,\n          render: props => {\n            console.log(props);\n            return React.createElement(item.component, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      })))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sky/project/studyReact/10-react-router-dom/src/App.js"],"names":["React","Component","Route","NavLink","BrowserRouter","Router","Switch","routers","App","getData","arr","to","exact","con","render","data","map","item","index","path","component","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,KADJ,CAEI;AACA;AACA;AACA;AALJ,EAMIC,OANJ,EAOIC,aAAa,IAAIC,MAPrB,CAQI;AARJ,EASIC,MATJ,CAUI;AAVJ,OAWO,kBAXP;AAYA,OAAO,wBAAP;AACA,OAAQ,uBAAR,C,CAEA;AACA;AACA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AAIA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SACxBQ,OADwB,GACd,MAAK;AACX,YAAMC,GAAG,GAAG,CACR;AACIC,QAAAA,EAAE,EAAC,GADP;AAEIC,QAAAA,KAAK,EAAC,IAFV;AAGIC,QAAAA,GAAG,EAAC;AAHR,OADQ,EAMR;AACIF,QAAAA,EAAE,EAAC,OADP;AAEIE,QAAAA,GAAG,EAAC;AAFR,OANQ,EAUR;AACIF,QAAAA,EAAE,EAAC,OADP;AAEIE,QAAAA,GAAG,EAAC;AAFR,OAVQ,CAAZ;AAeA,aAAOH,GAAP;AACH,KAlBuB;AAAA;;AAoBxBI,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKN,OAAL,EAAb;AAEA;AACI;;;;;;;;;;;;;;;;;;;;;;AA4BA,0BAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAuBQM,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACrB;AACA,eAAQ,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA;AAAd,WACaD,IADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACoBA,IAAI,CAACJ,GADzB,CAAR;AAEH,OAJD,CAvBR,CADJ,EA+BI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAcQN,OAAO,CAACS,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACxB,YAAID,IAAI,CAACL,KAAT,EAAe;AACX,iBACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAEM,KAAZ;AAAmB,YAAA,IAAI,EAAED,IAAI,CAACE,IAA9B;AAAoC,YAAA,SAAS,EAAEF,IAAI,CAACG,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AACD,eAAQ,oBAAC,KAAD;AACJ,UAAA,GAAG,EAAEF,KADD;AAEJ,UAAA,IAAI,EAAED,IAAI,CAACE,IAFP;AAIJ,UAAA,MAAM,EAAGE,KAAD,IAAW;AACfC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,mBAAO,oBAAC,IAAD,CAAM,SAAN,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEH,WARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUH,OAhBD,CAdR,CA/BJ;AA7BJ;AA+FH;;AAtHuB;;AAyH5B,eAAeb,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Route,\n    // Router,\n    // Link,\n    // HashRouter as Router,\n    //hashRouter 不会更新页面\n    NavLink,\n    BrowserRouter as Router,\n    // StaticRouter,\n    Switch,\n    // HashRouter\n} from 'react-router-dom';\nimport './static/css/index.css';\nimport  \"./component/index.css\";\n\n// import Home from \"./component/home.jsx\";\n// import User from \"./component/user\";\n// import News from \"./component/news\";\n// import Not404 from \"./component/not404\";\n// import Newsdetails from \"./component/newsdetails\";\nimport routers from \"./router/index.js\";\n// import Home from \"./component/home\";\n\n\n\nclass App extends Component {\n    getData = () =>{\n        const arr = [\n            {\n                to:'/',\n                exact:true,\n                con:\"Home\"\n            },\n            {\n                to:'/news',\n                con:\"News\"\n            },\n            {\n                to:'/user',\n                con:\"User\"\n            }\n        ];\n        return arr;\n    };\n\n    render() {\n        const data = this.getData();\n\n        return (\n            /*\n            <BrowserRouter>\n               <div>\n                       路由到user 或者news\n                       会出现home组件(根组件)与自身组件\n\n                       原因:匹配不精准\n\n                       解决办法:\n                       组件添加属性exact 精准匹配根组件\n\n                       不精准匹配\n                       匹配不止一条路由\n                       从上至下\n\n                       如果想只匹配一个组件\n                       用switch,不用BrowserRouter\n\n\n                   <Route exact path='/' component={Home} />\n                   <Route path='/User' component={User} />\n                   <Route path='/News' component={News} />\n                   <Home />\n                   <User />\n                   <News />\n               </div>\n            </BrowserRouter>\n            * */\n            <Router>\n                <div className={'topNav'}>\n                    {/*\n                    path 是路由参数\n                    localhost:3000/\n                    localhost:3000/user\n                    localhost:3000/news\n\n                    Link -> a标签\n                    to表示路由参数\n                    https://reacttraining.com/react-router/web/api/Link\n\n\n                */}\n                    {/*\n                        NavLink 向子组件传值\n                        1 get传值\n                        2 动态路由  根据路由传递参数\n                        3 localstorage\n                    */}\n                    {/*<NavLink  exact activeClassName={'home'} to={'/'}> Home</NavLink>*/}\n                    {/*<NavLink  to={'/news'}> News</NavLink>*/}\n                    {/*<NavLink  to={'/user'}> User</NavLink>*/}\n                    {\n                        data.map((item,index) => {\n                            // return (<NavLink key={index} to={item.to}>{item.con}</NavLink>)\n                            return (<NavLink key={index}\n                                             {...item}>{item.con}</NavLink>)\n                        })\n                    }\n                </div>\n                <Switch>\n                    {/*<Route exact path='/' component={Home}/>*/}\n                    {/*<Route path='/user' component={User}/>*/}\n                    {/*<Route path='/news' component={News}/>*/}\n                    {/*<Route path='/newsdetails' component={Newsdetails} />*/}\n                    {/*<Route component={Not404} />*/}\n                    {\n                        // routers.map((item,index) => {\n                        //     if(item.exact === true)  return <Route key={index} exact={item.exact} path={item.path} component={item.component} />\n                        //     return <Route key={index} path={item.path} component={item.component} />\n                        //     return <Route key={index} {...item} />\n                        })\n                    }\n                    {\n                        routers.map((item,index) => {\n                            if (item.exact){\n                                return(\n                                    <Route key={index} path={item.path} component={item.component}></Route>\n                                )\n                            }\n                            return (<Route\n                                key={index}\n                                path={item.path}\n\n                                render={(props) => {\n                                    console.log(props);\n                                    return <item.component {...props}  />\n\n                                }}\n                            />)\n                        })\n                    }\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}